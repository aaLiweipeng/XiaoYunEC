apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':xiaoyun_annotations')
    //字体图标
    implementation 'com.joanzapata.iconify:android-iconify-ionicons:2.2.2'
    implementation 'com.joanzapata.iconify:android-iconify-fontawesome:2.2.2'
    // Fragmentation 依赖
    // appcompat-v7包是必须的
    implementation 'me.yokeyword:fragmentation:1.3.8'
    implementation 'me.yokeyword:fragmentation-swipeback:1.3.8'
    //在边缘上滑动，可以回到上一个Fragment
    //引入ButterKnife
    implementation 'com.jakewharton:butterknife:9.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0'
    //网络请求依赖
    implementation 'com.squareup.okhttp3:okhttp:3.14.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    //    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    //对应Retrofit的 转换器 可以返回String类型
    //Loading
    implementation 'com.wang.avi:library:2.1.3'
    //Banner依赖
    implementation 'com.bigkoo:convenientbanner:2.0.5'
    implementation 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'
    //    implementation 'androidx.recyclerview:recyclerview:1.0.0+'
    //Json 处理  用的是阿里巴巴的框架，解析的速度和应用性应该比Google的GSON和Jackson好很多
    implementation 'com.alibaba:fastjson:1.1.68.android'
    //Log
    implementation 'com.orhanobut:logger:2.2.0'
    //数据库依赖
    implementation 'org.greenrobot:greendao-generator:3.2.2'
    implementation 'org.greenrobot:greendao:3.2.2'
    //微信依赖
    //noinspection GradleDynamicVersion
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    //RecyclerView 依赖
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.16'
    //RecyclerView 分隔线
    implementation 'com.choices.divider:RecyclerView_Divider:1.0.0'

    //图片处理
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    //下面这个库 是为了让glide能使用OkHttp的网络层，
    // 这样的话在网络上会进行一系列的优化和加固
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'

    //沉浸式状态栏
    implementation ('com.github.niorgai:StatusBarCompat:2.1.4', {
        exclude group: 'com.android.support'
    })
    //Google autoValue
    compileOnly 'com.google.auto.value:auto-value:1.2'
    annotationProcessor "com.google.auto.value:auto-value:1.2"
    //RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

}
